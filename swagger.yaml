openapi: 3.0.3
info:
  title: Cadastro de Palestrantes (C.R.U.D) - OpenAPI 3.0
  description: >-
    Este projeto trata-se de uma aplicação de cadastro de talkers (palestrantes) em que será possível cadastrar, visualizar, pesquisar, editar e excluir informações.


    Alguns links úteis:

    - [Repositorio Talker Manager](https://github.com/Andreyrvs/24-talker-manager)
  version: 1.0.0
  contact:
    email: cortaesai@gmail.com
    linkedin: https://www.linkedin.com/in/andreyrv/
servers:
  - url: http://localhost:3001/
  - url: https://24-talker-manager-production.up.railway.app/
tags:
  - name: health
    description: status da api
  - name: talker
    description: Tudo sobre os palestrantes
  - name: login
    description: Login da aplicação
paths:
  /health:
    get:
      tags:
        - health
      summary: Status da API
      description: Retorna um objeto com dados de tempo"
      responses:
        '200':
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                  $ref: '#components/schemas/Health'

  /api/login:
    post:
      tags:
        - login
        

  /api/talker:
    get:
      tags:
        - talker
      summary: Retorna todos os palestrantes
      description: Um array de objetos com dados dos palestrantes
      responses:
        '200':
          description: Operação bem sucedida
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Talker'
    post:
      tags:
        - talker
      summary: Cria um palestrante.
      description: Um array de objetos com dados dos palestrantes
      requestBody:
        description: Insira o Palestrante com respectivos dados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TalkerPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                  $ref: '#components/schemas/Talker'

components:
  schemas:
    Health:
      type: object
      properties:
        uptime:
          type: integer
          example: 7.076872259
        message:
          type: string
          example: OK
        timestamp:
          type: string
          example: 2023-03-03T23:31:51.184Z
        cors:
          type: string
          example: This is CORS-enabled for all origins!
    
    Talker:
      type: object
      properties:
        name:
          type: string
          example: Henrique Albuquerque
        age:
          type: integer
          example: 87
        id:
          type: integer
          example: 2
        talk:
          type: object
          properties:
            watchedAt:
              type: string
              example: 23/10/2020
            rate:
              type: string
              example: 5

    TalkerPost:
      required:
        - name
        - age
        - talk
        - watchedAt
        - rate
      type: object
      properties:
        name:
          type: string
          example: Andrey RV
        age:
          type: integer
          example: 25
        talk:
          type: object
          properties:
            watchedAt:
              type: string
              example: 23/10/2020
            rate:
              type: string
              example: 5

requestBodies:
  TalkerPost:
    description: Adicionar Palestrante
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/TalkerPost'
